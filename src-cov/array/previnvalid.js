/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['array/previnvalid.js']) {
  _$jscoverage['array/previnvalid.js'] = [];
  _$jscoverage['array/previnvalid.js'][13] = 0;
  _$jscoverage['array/previnvalid.js'][15] = 0;
  _$jscoverage['array/previnvalid.js'][20] = 0;
  _$jscoverage['array/previnvalid.js'][21] = 0;
  _$jscoverage['array/previnvalid.js'][22] = 0;
  _$jscoverage['array/previnvalid.js'][23] = 0;
  _$jscoverage['array/previnvalid.js'][26] = 0;
  _$jscoverage['array/previnvalid.js'][27] = 0;
  _$jscoverage['array/previnvalid.js'][28] = 0;
  _$jscoverage['array/previnvalid.js'][32] = 0;
}
_$jscoverage['array/previnvalid.js'].source = ["/**","* Previous Invalid","* (c) 2013 Bill, BunKat LLC.","*","* Returns the previous invalid value in a range of values, wrapping as needed. Assumes","* the array has already been sorted.","*","* Later is freely distributable under the MIT license.","* For all details and documentation:","*     http://github.com/bunkat/later","*/","","later.array.prevInvalid = function (val, values, extent) {","","  var min = extent[0], max = extent[1], len = values.length,","      zeroVal = values[len-1] === 0 &amp;&amp; min !== 0 ? max : 0,","      next = val,","      i = values.indexOf(val);","","  while(next === (values[i] || zeroVal)) {","    next--;","    if(next &lt; min) {","      next = max;","    }","","    i--;","    if(i === -1) {","      i = len-1;","    }","  }","","  return next;","};"];
_$jscoverage['array/previnvalid.js'][13]++;
later.array.prevInvalid = (function (val, values, extent) {
  _$jscoverage['array/previnvalid.js'][15]++;
  var min = extent[0], max = extent[1], len = values.length, zeroVal = (((values[(len - 1)] === 0) && (min !== 0))? max: 0), next = val, i = values.indexOf(val);
  _$jscoverage['array/previnvalid.js'][20]++;
  while ((next === (values[i] || zeroVal))) {
    _$jscoverage['array/previnvalid.js'][21]++;
    (next--);
    _$jscoverage['array/previnvalid.js'][22]++;
    if ((next < min)) {
      _$jscoverage['array/previnvalid.js'][23]++;
      next = max;
    }
    _$jscoverage['array/previnvalid.js'][26]++;
    (i--);
    _$jscoverage['array/previnvalid.js'][27]++;
    if ((i === -1)) {
      _$jscoverage['array/previnvalid.js'][28]++;
      i = (len - 1);
    }
}
  _$jscoverage['array/previnvalid.js'][32]++;
  return next;
});
