/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['array/prev.js']) {
  _$jscoverage['array/prev.js'] = [];
  _$jscoverage['array/prev.js'][13] = 0;
  _$jscoverage['array/prev.js'][15] = 0;
  _$jscoverage['array/prev.js'][19] = 0;
  _$jscoverage['array/prev.js'][20] = 0;
  _$jscoverage['array/prev.js'][22] = 0;
  _$jscoverage['array/prev.js'][23] = 0;
  _$jscoverage['array/prev.js'][26] = 0;
  _$jscoverage['array/prev.js'][27] = 0;
  _$jscoverage['array/prev.js'][28] = 0;
  _$jscoverage['array/prev.js'][31] = 0;
  _$jscoverage['array/prev.js'][34] = 0;
}
_$jscoverage['array/prev.js'].source = ["/**","* Previous","* (c) 2013 Bill, BunKat LLC.","*","* Returns the previous valid value in a range of values, wrapping as needed. Assumes","* the array has already been sorted.","*","* Later is freely distributable under the MIT license.","* For all details and documentation:","*     http://github.com/bunkat/later","*/","","later.array.prev = function (val, values, extent) {","","  var cur, len = values.length,","      zeroIsLargest = extent[0] !== 0,","      prevIdx = len-1;","","  for(var i = 0; i &lt; len; i++) {","    cur = values[i];","","    if(cur === val) {","      return cur;","    }","","    if(cur &lt; val || (cur === 0 &amp;&amp; zeroIsLargest &amp;&amp; extent[1] &lt; val)) {","      prevIdx = i;","      continue;","    }","","    break;","  }","","  return values[prevIdx];","};"];
_$jscoverage['array/prev.js'][13]++;
later.array.prev = (function (val, values, extent) {
  _$jscoverage['array/prev.js'][15]++;
  var cur, len = values.length, zeroIsLargest = (extent[0] !== 0), prevIdx = (len - 1);
  _$jscoverage['array/prev.js'][19]++;
  for (var i = 0; (i < len); (i++)) {
    _$jscoverage['array/prev.js'][20]++;
    cur = values[i];
    _$jscoverage['array/prev.js'][22]++;
    if ((cur === val)) {
      _$jscoverage['array/prev.js'][23]++;
      return cur;
    }
    _$jscoverage['array/prev.js'][26]++;
    if (((cur < val) || ((cur === 0) && zeroIsLargest && (extent[1] < val)))) {
      _$jscoverage['array/prev.js'][27]++;
      prevIdx = i;
      _$jscoverage['array/prev.js'][28]++;
      continue;
    }
    _$jscoverage['array/prev.js'][31]++;
    break;
}
  _$jscoverage['array/prev.js'][34]++;
  return values[prevIdx];
});
