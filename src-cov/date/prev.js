/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['date/prev.js']) {
  _$jscoverage['date/prev.js'] = [];
  _$jscoverage['date/prev.js'][24] = 0;
  _$jscoverage['date/prev.js'][26] = 0;
  _$jscoverage['date/prev.js'][27] = 0;
  _$jscoverage['date/prev.js'][28] = 0;
  _$jscoverage['date/prev.js'][29] = 0;
  _$jscoverage['date/prev.js'][30] = 0;
  _$jscoverage['date/prev.js'][31] = 0;
  _$jscoverage['date/prev.js'][33] = 0;
}
_$jscoverage['date/prev.js'].source = ["/**","* Prev","* (c) 2013 Bill, BunKat LLC.","*","* Creates a new Date object defaulted to the last second after the specified","* values.","*","* Later is freely distributable under the MIT license.","* For all details and documentation:","*     http://github.com/bunkat/later","*/","","/**","* Builds and returns a new Date using the specified values.  Date","* returned is either using Local time or UTC based on isLocal.","*","* @param {Int} Y: Four digit year","* @param {Int} M: Month between 0 and 11, defaults to 11","* @param {Int} D: Date between 1 and 31, defaults to last day of month","* @param {Int} h: Hour between 0 and 23, defaults to 23","* @param {Int} m: Minute between 0 and 59, defaults to 59","* @param {Int} s: Second between 0 and 59, defaults to 59","*/","later.date.prev = function(Y, M, D, h, m, s) {","","  var len = arguments.length;","  M = len &lt; 2 ? 11 : M-1;","  D = len &lt; 3 ? later.D.extent(later.date.next(Y, M+1))[1] : D;","  h = len &lt; 4 ? 23 : h;","  m = len &lt; 5 ? 59 : m;","  s = len &lt; 6 ? 59 : s;","","  return later.date.build(Y, M, D, h, m, s);","};"];
_$jscoverage['date/prev.js'][24]++;
later.date.prev = (function (Y, M, D, h, m, s) {
  _$jscoverage['date/prev.js'][26]++;
  var len = arguments.length;
  _$jscoverage['date/prev.js'][27]++;
  M = ((len < 2)? 11: (M - 1));
  _$jscoverage['date/prev.js'][28]++;
  D = ((len < 3)? later.D.extent(later.date.next(Y, (M + 1)))[1]: D);
  _$jscoverage['date/prev.js'][29]++;
  h = ((len < 4)? 23: h);
  _$jscoverage['date/prev.js'][30]++;
  m = ((len < 5)? 59: m);
  _$jscoverage['date/prev.js'][31]++;
  s = ((len < 6)? 59: s);
  _$jscoverage['date/prev.js'][33]++;
  return later.date.build(Y, M, D, h, m, s);
});
