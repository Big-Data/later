/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['date/date.js']) {
  _$jscoverage['date/date.js'] = [];
  _$jscoverage['date/date.js'][1] = 0;
  _$jscoverage['date/date.js'][3] = 0;
  _$jscoverage['date/date.js'][5] = 0;
  _$jscoverage['date/date.js'][6] = 0;
  _$jscoverage['date/date.js'][9] = 0;
  _$jscoverage['date/date.js'][10] = 0;
  _$jscoverage['date/date.js'][11] = 0;
  _$jscoverage['date/date.js'][12] = 0;
  _$jscoverage['date/date.js'][13] = 0;
  _$jscoverage['date/date.js'][14] = 0;
  _$jscoverage['date/date.js'][15] = 0;
  _$jscoverage['date/date.js'][16] = 0;
  _$jscoverage['date/date.js'][19] = 0;
  _$jscoverage['date/date.js'][21] = 0;
  _$jscoverage['date/date.js'][22] = 0;
  _$jscoverage['date/date.js'][25] = 0;
  _$jscoverage['date/date.js'][26] = 0;
  _$jscoverage['date/date.js'][27] = 0;
  _$jscoverage['date/date.js'][28] = 0;
  _$jscoverage['date/date.js'][29] = 0;
  _$jscoverage['date/date.js'][30] = 0;
  _$jscoverage['date/date.js'][31] = 0;
  _$jscoverage['date/date.js'][32] = 0;
  _$jscoverage['date/date.js'][36] = 0;
  _$jscoverage['date/date.js'][38] = 0;
  _$jscoverage['date/date.js'][39] = 0;
  _$jscoverage['date/date.js'][53] = 0;
  _$jscoverage['date/date.js'][54] = 0;
  _$jscoverage['date/date.js'][65] = 0;
}
_$jscoverage['date/date.js'].source = ["later.date = {};","","later.date.UTC = function() {","","  later.date.build = function(Y, M, D, h, m, s) {","    return new Date(Date.UTC(Y, M, D, h, m, s));","  };","","  later.date.isUTC = true;","  later.date.getYear = Date.prototype.getUTCFullYear;","  later.date.getMonth = Date.prototype.getUTCMonth;","  later.date.getDate = Date.prototype.getUTCDate;","  later.date.getDay = Date.prototype.getUTCDay;","  later.date.getHour = Date.prototype.getUTCHours;","  later.date.getMin = Date.prototype.getUTCMinutes;","  later.date.getSec = Date.prototype.getUTCSeconds;","};","","later.date.localTime = function() {","","  later.date.build = function(Y, M, D, h, m, s) {","    return new Date(Y, M, D, h, m, s);","  };","","  later.date.isUTC = false;","  later.date.getYear = Date.prototype.getFullYear;","  later.date.getMonth = Date.prototype.getMonth;","  later.date.getDate = Date.prototype.getDate;","  later.date.getDay = Date.prototype.getDay;","  later.date.getHour = Date.prototype.getHours;","  later.date.getMin = Date.prototype.getMinutes;","  later.date.getSec = Date.prototype.getSeconds;","};","","// utc by default","later.date.UTC();","","later.date.nextRollover = function(d, val, constraint, period) {","  return val &lt;= constraint.val(d) || val &gt; constraint.extent(d)[1] ?","            period.next(d, period.val(d)+1) :","            period.start(d);","","","/*  return (val &amp;&amp; val &lt;= constraint.val(d)) ||","         (val &gt; constraint.extent(d)[1]) ||","         (!val &amp;&amp; constraint.val(d) === constraint.extent(d)[1]) ?","            period.next(d, period.val(d)+1) :","            period.start(d);*/","};","","","","later.date.prevRollover = function(d, val, constraint, period) {","  return val &gt;= constraint.val(d) ?","            period.start(period.prev(d, period.val(d)-1)) :","            period.start(d);","","/*  return (val &gt;= constraint.val(d)) || !val ?","            period.start(period.prev(d, period.val(d)-1)) :","            period.start(d);*/","};","","","","later.date.daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];"];
_$jscoverage['date/date.js'][1]++;
later.date = {};
_$jscoverage['date/date.js'][3]++;
later.date.UTC = (function () {
  _$jscoverage['date/date.js'][5]++;
  later.date.build = (function (Y, M, D, h, m, s) {
  _$jscoverage['date/date.js'][6]++;
  return new Date(Date.UTC(Y, M, D, h, m, s));
});
  _$jscoverage['date/date.js'][9]++;
  later.date.isUTC = true;
  _$jscoverage['date/date.js'][10]++;
  later.date.getYear = Date.prototype.getUTCFullYear;
  _$jscoverage['date/date.js'][11]++;
  later.date.getMonth = Date.prototype.getUTCMonth;
  _$jscoverage['date/date.js'][12]++;
  later.date.getDate = Date.prototype.getUTCDate;
  _$jscoverage['date/date.js'][13]++;
  later.date.getDay = Date.prototype.getUTCDay;
  _$jscoverage['date/date.js'][14]++;
  later.date.getHour = Date.prototype.getUTCHours;
  _$jscoverage['date/date.js'][15]++;
  later.date.getMin = Date.prototype.getUTCMinutes;
  _$jscoverage['date/date.js'][16]++;
  later.date.getSec = Date.prototype.getUTCSeconds;
});
_$jscoverage['date/date.js'][19]++;
later.date.localTime = (function () {
  _$jscoverage['date/date.js'][21]++;
  later.date.build = (function (Y, M, D, h, m, s) {
  _$jscoverage['date/date.js'][22]++;
  return new Date(Y, M, D, h, m, s);
});
  _$jscoverage['date/date.js'][25]++;
  later.date.isUTC = false;
  _$jscoverage['date/date.js'][26]++;
  later.date.getYear = Date.prototype.getFullYear;
  _$jscoverage['date/date.js'][27]++;
  later.date.getMonth = Date.prototype.getMonth;
  _$jscoverage['date/date.js'][28]++;
  later.date.getDate = Date.prototype.getDate;
  _$jscoverage['date/date.js'][29]++;
  later.date.getDay = Date.prototype.getDay;
  _$jscoverage['date/date.js'][30]++;
  later.date.getHour = Date.prototype.getHours;
  _$jscoverage['date/date.js'][31]++;
  later.date.getMin = Date.prototype.getMinutes;
  _$jscoverage['date/date.js'][32]++;
  later.date.getSec = Date.prototype.getSeconds;
});
_$jscoverage['date/date.js'][36]++;
later.date.UTC();
_$jscoverage['date/date.js'][38]++;
later.date.nextRollover = (function (d, val, constraint, period) {
  _$jscoverage['date/date.js'][39]++;
  return (((val <= constraint.val(d)) || (val > constraint.extent(d)[1]))? period.next(d, (period.val(d) + 1)): period.start(d));
});
_$jscoverage['date/date.js'][53]++;
later.date.prevRollover = (function (d, val, constraint, period) {
  _$jscoverage['date/date.js'][54]++;
  return ((val >= constraint.val(d))? period.start(period.prev(d, (period.val(d) - 1))): period.start(d));
});
_$jscoverage['date/date.js'][65]++;
later.date.daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
