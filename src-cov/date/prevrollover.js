/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['date/prevrollover.js']) {
  _$jscoverage['date/prevrollover.js'] = [];
  _$jscoverage['date/prevrollover.js'][14] = 0;
  _$jscoverage['date/prevrollover.js'][15] = 0;
  _$jscoverage['date/prevrollover.js'][17] = 0;
}
_$jscoverage['date/prevrollover.js'].source = ["/**","* Prev Rollover","* (c) 2013 Bill, BunKat LLC.","*","* Determines if a value will cause a particualr constraint to rollover to the","* previous largest time period. Used primarily when a constraint has a","* variable extent.","*","* Later is freely distributable under the MIT license.","* For all details and documentation:","*     http://github.com/bunkat/later","*/","","later.date.prevRollover = function(d, val, constraint, period) {","  var cur = constraint.val(d);","","  return (val &gt;= cur || !val) ?","            period.start(period.prev(d, period.val(d)-1)) :","            period.start(d);","};"];
_$jscoverage['date/prevrollover.js'][14]++;
later.date.prevRollover = (function (d, val, constraint, period) {
  _$jscoverage['date/prevrollover.js'][15]++;
  var cur = constraint.val(d);
  _$jscoverage['date/prevrollover.js'][17]++;
  return (((val >= cur) || (! val))? period.start(period.prev(d, (period.val(d) - 1))): period.start(d));
});
