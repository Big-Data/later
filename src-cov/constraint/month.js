/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['constraint/month.js']) {
  _$jscoverage['constraint/month.js'] = [];
  _$jscoverage['constraint/month.js'][11] = 0;
  _$jscoverage['constraint/month.js'][30] = 0;
  _$jscoverage['constraint/month.js'][38] = 0;
  _$jscoverage['constraint/month.js'][47] = 0;
  _$jscoverage['constraint/month.js'][56] = 0;
  _$jscoverage['constraint/month.js'][66] = 0;
  _$jscoverage['constraint/month.js'][68] = 0;
  _$jscoverage['constraint/month.js'][80] = 0;
  _$jscoverage['constraint/month.js'][82] = 0;
}
_$jscoverage['constraint/month.js'].source = ["/**","* Month Constraint (M)","* (c) 2013 Bill, BunKat LLC.","*","* Definition for a month constraint type.","*","* Later is freely distributable under the MIT license.","* For all details and documentation:","*     http://github.com/bunkat/later","*/","later.month = later.M = {","","  /**","  * The name of this constraint.","  */","  name: 'month',","","  /**","  * The rough amount of seconds between start and end for this constraint.","  * (doesn't need to be exact)","  */","  range: 2629740,","","  /**","  * The month value of the specified date.","  *","  * @param {Date} d: The date to calculate the value of","  */","  val: function(d) {","    return d.M || (d.M = later.date.getMonth.call(d)+1);","  },","","  /**","  * The minimum and maximum valid month values. Unlike the native date object,","  * month values in later are 1 based.","  */","  extent: function() {","    return [1, 12];","  },","","  /**","  * The start of the month of the specified date.","  *","  * @param {Date} d: The specified date","  */","  start: function(d) {","    return d.MStart || (d.MStart = later.date.next(later.Y.val(d), later.M.val(d)));","  },","","  /**","  * The end of the month of the specified date.","  *","  * @param {Date} d: The specified date","  */","  end: function(d) {","    return d.MEnd || (d.MEnd = later.date.prev(later.Y.val(d), later.M.val(d)));","  },","","  /**","  * Returns the start of the next instance of the month value indicated.","  *","  * @param {Date} d: The starting date","  * @param {int} val: The desired value, must be within extent","  */","  next: function(d, val) {","    val = val || later.M.extent()[1];","","    return later.date.next(","      later.Y.val(d) + (val &lt;= later.M.val(d) ? 1 : 0),","      val);","  },","","  /**","  * Returns the end of the previous instance of the month value indicated.","  *","  * @param {Date} d: The starting date","  * @param {int} val: The desired value, must be within extent","  */","  prev: function(d, val) {","    val = val || later.M.extent()[1];","","    return later.date.prev(","      later.Y.val(d) - (val &gt;= later.M.val(d) ? 1 : 0),","      val);","  }","","};"];
_$jscoverage['constraint/month.js'][11]++;
later.month = (later.M = {name: "month", range: 2629740, val: (function (d) {
  _$jscoverage['constraint/month.js'][30]++;
  return (d.M || (d.M = (later.date.getMonth.call(d) + 1)));
}), extent: (function () {
  _$jscoverage['constraint/month.js'][38]++;
  return [1, 12];
}), start: (function (d) {
  _$jscoverage['constraint/month.js'][47]++;
  return (d.MStart || (d.MStart = later.date.next(later.Y.val(d), later.M.val(d))));
}), end: (function (d) {
  _$jscoverage['constraint/month.js'][56]++;
  return (d.MEnd || (d.MEnd = later.date.prev(later.Y.val(d), later.M.val(d))));
}), next: (function (d, val) {
  _$jscoverage['constraint/month.js'][66]++;
  val = (val || later.M.extent()[1]);
  _$jscoverage['constraint/month.js'][68]++;
  return later.date.next((later.Y.val(d) + ((val <= later.M.val(d))? 1: 0)), val);
}), prev: (function (d, val) {
  _$jscoverage['constraint/month.js'][80]++;
  val = (val || later.M.extent()[1]);
  _$jscoverage['constraint/month.js'][82]++;
  return later.date.prev((later.Y.val(d) - ((val >= later.M.val(d))? 1: 0)), val);
})});
